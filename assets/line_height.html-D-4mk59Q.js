import{_ as n,c as s,o as a,d as e}from"./app-DuwT1tMC.js";const t="/assets/20240701-CRHW0lmG.png",l="/assets/20240701002-BY96deEX.png",p="/assets/20240701003-Cf3_kTwo.png",o="/assets/20240701004-D-eOge5v.png",c="/assets/20240701005-Dl2sxrUm.png",i={},r=e('<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/line-height" target="_blank" rel="noopener noreferrer">line-height</a> 设置行框的高度。</p><ul><li>通常用于设置文本行之间的距离，如多行文本的间距</li><li>在块级元素中，它指定元素内行框的最小高度</li><li>对于非替代的 inline 元素，它用于计算行盒（line box）的高度</li></ul><h3 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章"><span>参考文章</span></a></h3><ul><li><a href="https://css-tricks.com/how-to-tame-line-height-in-css/" target="_blank" rel="noopener noreferrer">如何在 CSS 中控制行高</a></li><li><a href="https://iamvdo.me/en/blog/css-font-metrics-line-height-and-vertical-align" target="_blank" rel="noopener noreferrer">深入探究 CSS：字体规格、行高和垂直对齐</a></li></ul><p>在传统的西方字体设计中，一行文字由几个部分组成：</p><ul><li><code>Baseline</code>【基线】: 这是字体所在的假想线。当您在横格笔记本中书写时，基线就是您书写的线。</li><li><code>Descender</code>【下降线】: 这条线位于基线正下方。这是一些字符（如小写字母g、j、q和y）与基线接触的线。</li><li><code>X-height</code>【X 高度】: 这是一行文本中普通小写字母的高度。通常，这是其他小写字母的高度，尽管有些小写字母的某些部分可能会超出 x 高度。无论出于何种目的，它都是小写字母的感知高度。</li><li><code>Cap-height</code>【大写字母高度】: 这是给定文本行上大多数大写字母的高度。</li><li><code>Ascender</code>【上升部】: 通常出现在大写字母高度正上方的一条线，某些字符（如小写字母h或b可能超过正常大写字母的高度）。</li></ul><p><img src="'+t+'" alt="基线"></p><p>上述文本的每个部分都是字体本身所固有的。字体的设计考虑了这些部分；但是，排版的某些部分由排版员（比如你和我！）而不是设计师决定。其中之一就是行距。</p><p>行距定义为一组类型中两个基线之间的距离。</p><p><img src="'+l+'" alt="行距"></p><p>当浏览器遇到 <code>line-height</code> 属性时， <span class="bg-yellow-200">它实际上会将文本行放在“行框”中，“行框”的高度与元素的行高相匹配。 我们不会在字体上设置行距，而是得到类似于在行框的两侧填充的内容。</span></p><p><img src="'+p+'" alt="line-height"></p><p>如上图所示，行框环绕一行文本，行距是利用一行文本下方和下一行文本上方的空间来创建的。这意味着，对于页面上的每个文本元素，在特定文本块中，行距的一半位于第一行文本上方和最后一行文本之后。</p><p>更令人惊讶的是，在元素上明确设置<code>line-height</code>和<code>font-size</code>具有相同值会在文本上方和下方留下额外空间。我们可以通过为元素添加背景颜色来看到这一点。</p><p><img src="'+o+`" alt="为元素添加背景颜色"></p><p>这是因为，尽管<code>font-size</code>设置为 32px，但由于产生了间距，实际文本大小仍会小于该值。</p><hr><p>当一个<code>&lt;p&gt;</code>元素在屏幕上呈现时，它可以由多行组成，具体取决于其宽度。 每行由一个或多个内联元素（HTML 标签或用于文本内容的匿名内联元素）组成，称为 <strong>线框</strong>。 <strong>线框的高度基于其子元素的高度。</strong> 因此，浏览器会计算每个内联元素的高度，从而计算线框的高度（从其子元素的最高点到其子元素的最低点）。 因此，线框始终足够高以包含其所有子元素（默认情况下）。</p><p>每个 HTML 元素其实都是一堆 <code>line-box</code> 的堆叠。如果你知道每个<code>line-box</code>的高度，你就知道元素的高度。</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre class="language-html"><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    Good design will be better.</span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>a<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Ba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>b<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Ba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>c<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Ba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    We get to make a consequence.</span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>它将生成3个行框：</p><p><img src="`+c+'" alt="行框"></p><p>（黑色边框）<code>&lt;p&gt;</code>由包含内联元素（实线边框）和匿名内联元素（虚线边框）的线框（白色边框）组成。</p><p>我们清楚的看到第二个行框比其他行框高，这是由于其子行框的内容区域计算所致</p><p><strong>线框创建过程中的困难部分在于我们无法真正看到它，也无法用 CSS 控制它。</strong></p><p>即使应用背景也无法给我们提供关于第一个线框高度的任何视觉线索。</p><p>到目前为止，我介绍了两个概念：<code>content-area</code> 和 <code>line-box</code>。</p><p>我说过<code>line-box</code>的高度是根据其子元素的高度计算的，但我并没有说其子元素<code>content-area</code>的高度。这有很大的不同。</p><p>尽管听起来很奇怪，但<strong>内联元素有两个不同的高度：内容区域高度和虚拟区域高度</strong>（我发明了虚拟区域这个术语，因为高度对我们来说是不可见的，但你不会在规范中找到任何出现）。</p>',30),u=[r];function d(g,h){return a(),s("div",null,u)}const m=n(i,[["render",d],["__file","line_height.html.vue"]]),_=JSON.parse('{"path":"/css/line_height.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[{"level":3,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}]}],"git":{"updatedTime":1720352800000,"contributors":[{"name":"BaronYan","email":"1229598328@qq.com","commits":1}]},"filePathRelative":"css/line_height.md","excerpt":"<h2>简介</h2>\\n<p><a href=\\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/line-height\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">line-height</a> 设置行框的高度。</p>\\n<ul>\\n<li>通常用于设置文本行之间的距离，如多行文本的间距</li>\\n<li>在块级元素中，它指定元素内行框的最小高度</li>\\n<li>对于非替代的 inline 元素，它用于计算行盒（line box）的高度</li>\\n</ul>\\n<h3>参考文章</h3>\\n<ul>\\n<li><a href=\\"https://css-tricks.com/how-to-tame-line-height-in-css/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">如何在 CSS 中控制行高</a></li>\\n<li><a href=\\"https://iamvdo.me/en/blog/css-font-metrics-line-height-and-vertical-align\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">深入探究 CSS：字体规格、行高和垂直对齐</a></li>\\n</ul>"}');export{m as comp,_ as data};
