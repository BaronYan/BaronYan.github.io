import{_ as e,c as o,o as t,d as c}from"./app-Ez13U31U.js";const r={},s=c("<p><code>⌘ + Enter</code> 选中整个代码库作为 Context</p><p>在 Cursor 对话中，<code>⌘ + Enter</code> 命令支持代码库嵌入，以提供更好的回答</p><p>发散一下思维，代码库也可以是文本或其他数字资产。比如这个例子 <code>https://x.com/xiaokedada/status/1832794562261389787</code>,在 cursor 中打开 obsidian 笔记本，然后基于当前的笔记，进行问答。</p><p>@ 符号</p><p>与 cursor 对话中，键入 @ 可以添加多种类型的资料作为 Context。</p><p>比如，@Files 在对话的时候指定一个或多个文件。比如我们的代码是模块化的，有时候改动一个功能，需要跟另一个文件联动，就可以用这个方法。</p><p>@Web 也是个很好的选择，可以在设置中把它加为默认 @Docs 也是一个隐藏的超级功能，不了解 API 的程序员不是一个好的程序员</p><p>下面是完整的介绍： @Files 引用某个文件 @Folders 引用文件夹 @Code 引用特定的代码片段 @Docs 访问外部文档 @Git 引用 git 的 commits、diffs 或 PR @Codebase 跟 ⌘ + Enter 一样，但是提供更多的配置 @Web 支持互联网内容搜索</p>",8),a=[s];function p(n,d){return t(),o("div",null,a)}const m=e(r,[["render",p],["__file","cursor.html.vue"]]),u=JSON.parse('{"path":"/software/cursor.html","title":"","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":1726085164000,"contributors":[{"name":"BaronYan","email":"1229598328@qq.com","commits":1}]},"filePathRelative":"software/cursor.md","excerpt":"<p><code>⌘ + Enter</code> 选中整个代码库作为 Context</p>\\n<p>在 Cursor 对话中，<code>⌘ + Enter</code> 命令支持代码库嵌入，以提供更好的回答</p>\\n<p>发散一下思维，代码库也可以是文本或其他数字资产。比如这个例子 <code>https://x.com/xiaokedada/status/1832794562261389787</code>,在 cursor 中打开 obsidian 笔记本，然后基于当前的笔记，进行问答。</p>\\n<p>@ 符号</p>\\n<p>与 cursor 对话中，键入 @ 可以添加多种类型的资料作为 Context。</p>"}');export{m as comp,u as data};
