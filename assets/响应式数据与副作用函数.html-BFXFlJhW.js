import{_ as n,c as s,o as a,d as e}from"./app-BRMDg-18.js";const t={},c=e(`<h2 id="响应系统的作用与实现" tabindex="-1"><a class="header-anchor" href="#响应系统的作用与实现"><span>响应系统的作用与实现</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">function</span> <span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">&#39;hello vue3&#39;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当 effect 函数执行时，它会设置 body 的文本内容，但除了effect 函数之外的任何函数都可以读取或设置 body 的文本内容。 也就是说，effect 函数的执行会直接或间接影响其他函数的执行，这时我们说 effect 函数产生了副作用。 副作用很容易产生，例如一个函数修改了全局变量，这其实也是一个副作用，如下面的代码所示：</p>`,3),p=[c];function l(i,o){return a(),s("div",null,p)}const u=n(t,[["render",l],["__file","响应式数据与副作用函数.html.vue"]]),d=JSON.parse(`{"path":"/vue3/%E5%93%8D%E5%BA%94%E5%BC%8F%E6%95%B0%E6%8D%AE%E4%B8%8E%E5%89%AF%E4%BD%9C%E7%94%A8%E5%87%BD%E6%95%B0.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"响应系统的作用与实现","slug":"响应系统的作用与实现","link":"#响应系统的作用与实现","children":[]}],"git":{"updatedTime":1722350112000,"contributors":[{"name":"BaronYan","email":"1229598328@qq.com","commits":1}]},"filePathRelative":"vue3/响应式数据与副作用函数.md","excerpt":"<h2>响应系统的作用与实现</h2>\\n<div class=\\"language-javascript\\" data-highlighter=\\"prismjs\\" data-ext=\\"js\\" data-title=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"line\\"><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">effect</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">    document<span class=\\"token punctuation\\">.</span>body<span class=\\"token punctuation\\">.</span>innerText <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'hello vue3'</span></span>\\n<span class=\\"line\\"><span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\"></span></code></pre></div>"}`);export{u as comp,d as data};
