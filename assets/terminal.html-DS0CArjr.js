import{_ as s,c as n,o as a,d as e}from"./app-Ckafhqz6.js";const t={},p=e(`<p>确保您已经在WSL的Ubuntu中安装了tmux：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">sudo</span> <span class="token function">apt</span> update</span>
<span class="line"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> tmux</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>在WSL的Ubuntu中编辑您的bash配置文件。通常是 <code>~/.bashrc</code>,在文件末尾添加以下内容</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 检查是否在tmux会话中，以及是否是交互式shell</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token string">&quot;<span class="token variable">$TMUX</span>&quot;</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">[</span> <span class="token parameter variable">-n</span> <span class="token string">&quot;<span class="token environment constant">$PS1</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token comment"># 启动新的tmux会话或附加到现有会话</span></span>
<span class="line">    tmux new-session <span class="token parameter variable">-A</span> <span class="token parameter variable">-s</span> workspace <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token comment"># 将窗口分割为四个窗格</span></span>
<span class="line">    <span class="token punctuation">\\</span><span class="token punctuation">;</span> split-window <span class="token parameter variable">-h</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span> split-window <span class="token parameter variable">-v</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span> select-pane <span class="token parameter variable">-t</span> <span class="token number">0</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span> split-window <span class="token parameter variable">-v</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token comment"># 在所有窗格中切换到工作目录</span></span>
<span class="line">    <span class="token punctuation">\\</span><span class="token punctuation">;</span> send-keys <span class="token parameter variable">-t</span> <span class="token number">0</span> <span class="token string">&#39;cd /path/to/your/work/directory&#39;</span> C-m <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token punctuation">\\</span><span class="token punctuation">;</span> send-keys <span class="token parameter variable">-t</span> <span class="token number">1</span> <span class="token string">&#39;cd /path/to/your/work/directory&#39;</span> C-m <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token punctuation">\\</span><span class="token punctuation">;</span> send-keys <span class="token parameter variable">-t</span> <span class="token number">2</span> <span class="token string">&#39;cd /path/to/your/work/directory&#39;</span> C-m <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token punctuation">\\</span><span class="token punctuation">;</span> send-keys <span class="token parameter variable">-t</span> <span class="token number">3</span> <span class="token string">&#39;cd /path/to/your/work/directory&#39;</span> C-m</span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请将 /path/to/your/work/directory 替换为您实际的工作目录路径。</p><p>重新加载bash配置: <code>source ~/.bashrc</code></p><p>现在，我们需要配置Windows Terminal以在启动时直接进入WSL的Ubuntu。打开Windows Terminal的设置（JSON文件），找到Ubuntu的配置部分，并修改如下：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">{</span>
<span class="line">    &quot;guid&quot;: &quot;{your-ubuntu-guid}&quot;,</span>
<span class="line">    &quot;hidden&quot;: false,</span>
<span class="line">    &quot;name&quot;: &quot;Ubuntu&quot;,</span>
<span class="line">    &quot;source&quot;: &quot;Windows.Terminal.Wsl&quot;,</span>
<span class="line">    &quot;startingDirectory&quot;: &quot;//wsl$/Ubuntu/home/yourusername&quot;,</span>
<span class="line">    &quot;commandline&quot;: &quot;wsl.exe -d Ubuntu -- bash -l&quot;</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请确保将 yourusername 替换为您在WSL Ubuntu中的用户名。 保存Windows Terminal的设置并重新启动Windows Terminal。 现在，当您在Windows Terminal中打开Ubuntu标签时，它应该会自动启动tmux，将屏幕分割为四个窗格，并在每个窗格中切换到您指定的工作目录。 如果仍然没有效果，请检查以下几点：</p><ol><li>确保tmux已正确安装在WSL的Ubuntu中。 检查 ~/.bashrc 文件中的修改是否正确保存。 确保Windows Terminal的设置正确指向了WSL的Ubuntu。 如果问题仍然存在，可能需要进一步调试。您可以尝试在 ~/.bashrc 文件中添加一些调试输出，例如：</li></ol><p><code>echo &quot;Entering custom tmux setup&quot; &gt;&gt; /tmp/debug.log</code></p>`,11),l=[p];function i(o,c){return a(),n("div",null,l)}const r=s(t,[["render",i],["__file","terminal.html.vue"]]),d=JSON.parse('{"path":"/linux/wsl/terminal.html","title":"","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":1727320945000,"contributors":[{"name":"BaronYan","email":"1229598328@qq.com","commits":1}]},"filePathRelative":"linux/wsl/terminal.md","excerpt":"<p>确保您已经在WSL的Ubuntu中安装了tmux：</p>\\n<div class=\\"language-bash\\" data-highlighter=\\"prismjs\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"line\\"><span class=\\"token function\\">sudo</span> <span class=\\"token function\\">apt</span> update</span>\\n<span class=\\"line\\"><span class=\\"token function\\">sudo</span> <span class=\\"token function\\">apt</span> <span class=\\"token function\\">install</span> tmux</span>\\n<span class=\\"line\\"></span></code></pre></div>"}');export{r as comp,d as data};
