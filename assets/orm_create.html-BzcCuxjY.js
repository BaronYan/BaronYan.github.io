import{_ as s,c as n,o as a,d as e}from"./app-JkUxUg5g.js";const t={},p=e(`<h1 id="laravel-orm-create" tabindex="-1"><a class="header-anchor" href="#laravel-orm-create"><span>Laravel ORM create()</span></a></h1><p>我来详细介绍 Laravel 中 create() 方法的用法：</p><h2 id="_1-基本用法" tabindex="-1"><a class="header-anchor" href="#_1-基本用法"><span>1. 基本用法</span></a></h2><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token class-name static-context">Model</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">    <span class="token comment">/* 需要插入的数据 */</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 最简单的创建方式</span></span>
<span class="line"><span class="token variable">$warehouse</span> <span class="token operator">=</span> <span class="token class-name static-context">Warehouse</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;北京仓库&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;address&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;北京市朝阳区&#39;</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),c=[p];function l(o,i){return a(),n("div",null,c)}const u=s(t,[["render",l],["__file","orm_create.html.vue"]]),d=JSON.parse(`{"path":"/laravel/orm_create.html","title":"Laravel ORM create()","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"1. 基本用法","slug":"_1-基本用法","link":"#_1-基本用法","children":[]}],"git":{"updatedTime":1731055811000,"contributors":[{"name":"BaronYan","email":"1229598328@qq.com","commits":1}]},"filePathRelative":"laravel/orm_create.md","excerpt":"\\n<p>我来详细介绍 Laravel 中 create() 方法的用法：</p>\\n<h2>1. 基本用法</h2>\\n<div class=\\"language-php\\" data-highlighter=\\"prismjs\\" data-ext=\\"php\\" data-title=\\"php\\"><pre class=\\"language-php\\"><code><span class=\\"line\\"><span class=\\"token class-name static-context\\">Model</span><span class=\\"token operator\\">::</span><span class=\\"token function\\">create</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span></span>\\n<span class=\\"line\\">    <span class=\\"token comment\\">/* 需要插入的数据 */</span></span>\\n<span class=\\"line\\"><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 最简单的创建方式</span></span>\\n<span class=\\"line\\"><span class=\\"token variable\\">$warehouse</span> <span class=\\"token operator\\">=</span> <span class=\\"token class-name static-context\\">Warehouse</span><span class=\\"token operator\\">::</span><span class=\\"token function\\">create</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span></span>\\n<span class=\\"line\\">    <span class=\\"token string single-quoted-string\\">'name'</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token string single-quoted-string\\">'北京仓库'</span><span class=\\"token punctuation\\">,</span></span>\\n<span class=\\"line\\">    <span class=\\"token string single-quoted-string\\">'address'</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token string single-quoted-string\\">'北京市朝阳区'</span></span>\\n<span class=\\"line\\"><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"></span></code></pre></div>"}`);export{u as comp,d as data};
