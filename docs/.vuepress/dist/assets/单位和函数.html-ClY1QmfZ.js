import{_ as t,c as n,o as a,e as s}from"./app-B01P4sP2.js";const e={},c=s(`<p>我们在 CSS 中只使用“px”（像素）的日子已经一去不复返了。如今，我们有很多选择。选择什么单位取决于上下文，有些应该用于文本，有些用于容器，有些用于打印。</p><table><thead><tr><th>单位</th><th>Name</th><th>相当于</th><th>关系到</th></tr></thead><tbody><tr><td>em</td><td>parent font size</td><td>1em = parent font size</td><td>Font</td></tr><tr><td>rem</td><td>font size of the root element</td><td>1rem = size of root element</td><td>Font</td></tr><tr><td>cap</td><td>height of root capital letters</td><td>1cap = height of a root element capital letter</td><td>Font</td></tr><tr><td>rcap</td><td>height of root capital letters</td><td>1cap = height of a root element capital letter</td><td>Font</td></tr><tr><td>vw</td><td>default viewport width</td><td>1vw = 1% of the default viewport’s width</td><td>Viewport</td></tr><tr><td>vh</td><td>default viewport height</td><td>1vh = 1% of the default viewport’s height</td><td>Viewport</td></tr></tbody></table><p>https://www.raresportan.com/css-units/</p><h2 id="css-常用函数" tabindex="-1"><a class="header-anchor" href="#css-常用函数"><span>CSS 常用函数</span></a></h2><p>CSS 有一些非常有用的函数，可以使用单个单位或多个单位来确定值。以下是一些示例：</p><h3 id="calc" tabindex="-1"><a class="header-anchor" href="#calc"><span>calc</span></a></h3><p>可以使用 <code>calc()</code> 函数来确定使用多个单位的尺寸：</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token selector">.container</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100% - 2em<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clamp" tabindex="-1"><a class="header-anchor" href="#clamp"><span>clamp</span></a></h3><p><code>clamp()</code> 函数接受最小值、理想值和最大值。如果需要，所有这些单位都可以不同：</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token selector">.container</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">/* 字体大小最小为 18px，最大为 3rem，其余为 4vw */</span></span>
<span class="line">    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token function">clamp</span><span class="token punctuation">(</span>18px<span class="token punctuation">,</span> 4vw<span class="token punctuation">,</span> 3rem<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="min-max" tabindex="-1"><a class="header-anchor" href="#min-max"><span>min/max</span></a></h3><p><code>min()</code>和<code>max()</code>是两个可以根据上下文限制值的函数：</p><p>此处宽度将是 <code>100vw - 3rem</code> 和 <code>80ch</code> 之间的最小值。在不同的屏幕尺寸上，会有不同的最小值.</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token selector">.container</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">min</span><span class="token punctuation">(</span>100vw - 3rem<span class="token punctuation">,</span> 80ch<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="minmax" tabindex="-1"><a class="header-anchor" href="#minmax"><span>minmax</span></a></h3><p>还有<code>minmax()</code>一个定义值范围的函数：</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token selector">.container</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">minmax</span><span class="token punctuation">(</span>30ch<span class="token punctuation">,</span> 80ch<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这种情况下，宽度的最小值为 <code>30ch</code>，最大值为 <code>80ch</code>，或介于这两者之间的任意值。</p>`,19),i=[c];function l(p,d){return a(),n("div",null,i)}const r=t(e,[["render",l],["__file","单位和函数.html.vue"]]),h=JSON.parse('{"path":"/css/%E5%8D%95%E4%BD%8D%E5%92%8C%E5%87%BD%E6%95%B0.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"CSS 常用函数","slug":"css-常用函数","link":"#css-常用函数","children":[{"level":3,"title":"calc","slug":"calc","link":"#calc","children":[]},{"level":3,"title":"clamp","slug":"clamp","link":"#clamp","children":[]},{"level":3,"title":"min/max","slug":"min-max","link":"#min-max","children":[]},{"level":3,"title":"minmax","slug":"minmax","link":"#minmax","children":[]}]}],"git":{"updatedTime":1720352800000,"contributors":[{"name":"BaronYan","email":"1229598328@qq.com","commits":1}]},"filePathRelative":"css/单位和函数.md","excerpt":"<p>我们在 CSS 中只使用“px”（像素）的日子已经一去不复返了。如今，我们有很多选择。选择什么单位取决于上下文，有些应该用于文本，有些用于容器，有些用于打印。</p>\\n<table>\\n<thead>\\n<tr>\\n<th>单位</th>\\n<th>Name</th>\\n<th>相当于</th>\\n<th>关系到</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>em</td>\\n<td>parent font size</td>\\n<td>1em = parent font size</td>\\n<td>Font</td>\\n</tr>\\n<tr>\\n<td>rem</td>\\n<td>font size of the root element</td>\\n<td>1rem = size of root element</td>\\n<td>Font</td>\\n</tr>\\n<tr>\\n<td>cap</td>\\n<td>height of root capital letters</td>\\n<td>1cap = height of a root element capital letter</td>\\n<td>Font</td>\\n</tr>\\n<tr>\\n<td>rcap</td>\\n<td>height of root capital letters</td>\\n<td>1cap = height of a root element capital letter</td>\\n<td>Font</td>\\n</tr>\\n<tr>\\n<td>vw</td>\\n<td>default viewport width</td>\\n<td>1vw = 1% of the default viewport’s width</td>\\n<td>Viewport</td>\\n</tr>\\n<tr>\\n<td>vh</td>\\n<td>default viewport height</td>\\n<td>1vh = 1% of the default viewport’s height</td>\\n<td>Viewport</td>\\n</tr>\\n</tbody>\\n</table>"}');export{r as comp,h as data};
