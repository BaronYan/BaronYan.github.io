import{_ as e,c as l,o as t,d as i}from"./app-lhfOYymE.js";const o={},n=i("<p><strong>Element.firstElementChild 和 Node.firstChild 有什么区别?</strong></p><p><code>Element.firstElementChild</code> 和 <code>Node.firstChild</code> 之间的区别在于<strong>它们返回的节点类型不同</strong>：</p><ol><li><code>Element.firstElementChild</code>: <ul><li>返回的是第一个子元素节点（Element），忽略文本节点、注释节点等。</li><li>如果没有子元素，返回 <code>null</code>。</li></ul></li><li><code>Node.firstChild</code>: <ul><li>返回的是第一个子节点，可以是元素节点、文本节点、注释节点等。</li><li>如果没有子节点，返回 <code>null</code>。</li></ul></li></ol><p>总结来说，<code>firstElementChild</code> 专注于子元素，而 <code>firstChild</code> 会返回任何类型的子节点。</p>",4),d=[n];function c(r,s){return t(),l("div",null,d)}const a=e(o,[["render",c],["__file","index.html.vue"]]),f=JSON.parse('{"path":"/JavaScript/dom/","title":"","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":1719930400000,"contributors":[{"name":"BaronYan","email":"1229598328@qq.com","commits":1}]},"filePathRelative":"JavaScript/dom/index.md","excerpt":"<p><strong>Element.firstElementChild 和 Node.firstChild 有什么区别?</strong></p>\\n<p><code>Element.firstElementChild</code> 和 <code>Node.firstChild</code> 之间的区别在于<strong>它们返回的节点类型不同</strong>：</p>\\n<ol>\\n<li><code>Element.firstElementChild</code>:\\n<ul>\\n<li>返回的是第一个子元素节点（Element），忽略文本节点、注释节点等。</li>\\n<li>如果没有子元素，返回 <code>null</code>。</li>\\n</ul>\\n</li>\\n<li><code>Node.firstChild</code>:\\n<ul>\\n<li>返回的是第一个子节点，可以是元素节点、文本节点、注释节点等。</li>\\n<li>如果没有子节点，返回 <code>null</code>。</li>\\n</ul>\\n</li>\\n</ol>"}');export{a as comp,f as data};
