import{_ as s,c as n,o as a,d as e}from"./app-Cm_dwHFp.js";const t={},p=e(`<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><ul><li><a href="https://laravel.com/docs/11.x/cache" target="_blank" rel="noopener noreferrer">Cache</a></li></ul><p>应用程序执行的某些数据检索或处理任务可能会占用大量 CPU 或需要几秒钟才能完成。 在这种情况下，通常会将检索到的数据缓存一段时间，以便在后续对相同数据的请求中快速检索这些数据。 缓存的数据通常存储在非常快速的数据存储中，例如 Memcached 或 Redis。</p><h2 id="redis" tabindex="-1"><a class="header-anchor" href="#redis"><span>Redis</span></a></h2><p>在 Laravel 中使用 Redis 缓存之前，您需要通过 PECL 安装 <code>PhpRedis</code> 扩展或 通过 Composer 安装 <code>predis/predis</code> 软件包。</p><h2 id="存储" tabindex="-1"><a class="header-anchor" href="#存储"><span>存储</span></a></h2><ol><li>将项目存储在缓存中：<div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token class-name static-context">Cache</span><span class="token operator">::</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;value&#39;</span><span class="token punctuation">,</span> <span class="token variable">$seconds</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><strong>无限期存储</strong>：如果未将存储时间传递给put方法，则该项目将被无限期存储<div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token class-name static-context">Cache</span><span class="token operator">::</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><strong>过期时间</strong>：还可以传递一个 <code>DateTime</code> 表示缓存项所需过期时间的实例<div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token class-name static-context">Cache</span><span class="token operator">::</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;value&#39;</span><span class="token punctuation">,</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">addMinutes</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><strong>如果不存在则存储</strong>：仅当缓存中尚不存在该项目时才将其添加到缓存中<div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token class-name static-context">Cache</span><span class="token operator">::</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;value&#39;</span><span class="token punctuation">,</span> <span class="token variable">$seconds</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name static-context">Cache</span><span class="token operator">::</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">addHours</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><strong>永久缓存</strong>：必须使用 <code>forget</code> 方法手动将其从缓存中删除<div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token class-name static-context">Cache</span><span class="token operator">::</span><span class="token function">forever</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h2 id="检索" tabindex="-1"><a class="header-anchor" href="#检索"><span>检索</span></a></h2><ul><li><code>Cache::get(&#39;key&#39;);</code></li><li><code>Cache::get(&#39;key&#39;, &#39;default&#39;);</code></li><li>如果缓存中不存在指定项，则将返回闭包的结果<div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token variable">$value</span> <span class="token operator">=</span> <span class="token class-name static-context">Cache</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token comment">/* ... */</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>判断项目是否存在 <code>Cache::has(&#39;key&#39;)</code></li><li>调整缓存中整数项的值，第二个参数指示增加或减少项值的量： <ul><li><code>Cache::increment(&#39;key&#39;);</code></li><li><code>Cache::increment(&#39;key&#39;, $amount);</code></li><li><code>Cache::decrement(&#39;key&#39;);</code></li><li><code>Cache::decrement(&#39;key&#39;, $amount);</code></li></ul></li></ul><h2 id="检索和存储" tabindex="-1"><a class="header-anchor" href="#检索和存储"><span>检索和存储</span></a></h2><p>如果请求的项目不存在，则存储默认值</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token variable">$value</span> <span class="token operator">=</span> <span class="token class-name static-context">Cache</span><span class="token operator">::</span><span class="token function">remember</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token variable">$seconds</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从缓存中检索项目，如果不存在则永久存储它</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token variable">$value</span> <span class="token operator">=</span> <span class="token class-name static-context">Cache</span><span class="token operator">::</span><span class="token function">rememberForever</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="检索和删除" tabindex="-1"><a class="header-anchor" href="#检索和删除"><span>检索和删除</span></a></h2><p>从缓存中检索项目然后删除该项目</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token variable">$value</span> <span class="token operator">=</span> <span class="token class-name static-context">Cache</span><span class="token operator">::</span><span class="token function">pull</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"> </span>
<span class="line"><span class="token variable">$value</span> <span class="token operator">=</span> <span class="token class-name static-context">Cache</span><span class="token operator">::</span><span class="token function">pull</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;default&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="删除" tabindex="-1"><a class="header-anchor" href="#删除"><span>删除</span></a></h2><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token class-name static-context">Cache</span><span class="token operator">::</span><span class="token function">forget</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>还可以通过提供零或负数的到期秒数来删除项目：</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token class-name static-context">Cache</span><span class="token operator">::</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;value&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name static-context">Cache</span><span class="token operator">::</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;value&#39;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以使用 <code>flush</code> 方法清除整个缓存：</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token class-name static-context">Cache</span><span class="token operator">::</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,23),l=[p];function c(o,i){return a(),n("div",null,l)}const r=s(t,[["render",c],["__file","cache.html.vue"]]),d=JSON.parse('{"path":"/laravel/cache.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"Redis","slug":"redis","link":"#redis","children":[]},{"level":2,"title":"存储","slug":"存储","link":"#存储","children":[]},{"level":2,"title":"检索","slug":"检索","link":"#检索","children":[]},{"level":2,"title":"检索和存储","slug":"检索和存储","link":"#检索和存储","children":[]},{"level":2,"title":"检索和删除","slug":"检索和删除","link":"#检索和删除","children":[]},{"level":2,"title":"删除","slug":"删除","link":"#删除","children":[]}],"git":{"updatedTime":1720534286000,"contributors":[{"name":"BaronYan","email":"1229598328@qq.com","commits":1}]},"filePathRelative":"laravel/cache.md","excerpt":"<h2>介绍</h2>\\n<ul>\\n<li><a href=\\"https://laravel.com/docs/11.x/cache\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Cache</a></li>\\n</ul>\\n<p>应用程序执行的某些数据检索或处理任务可能会占用大量 CPU 或需要几秒钟才能完成。\\n在这种情况下，通常会将检索到的数据缓存一段时间，以便在后续对相同数据的请求中快速检索这些数据。\\n缓存的数据通常存储在非常快速的数据存储中，例如 Memcached 或 Redis。</p>\\n<h2>Redis</h2>\\n<p>在 Laravel 中使用 Redis 缓存之前，您需要通过 PECL 安装 <code>PhpRedis</code> 扩展或\\n通过 Composer 安装 <code>predis/predis</code> 软件包。</p>"}');export{r as comp,d as data};
