import{_ as p,c as l,a as n,b as e,w as t,d as s,e as o,r as c,o as i}from"./app-BuumBsf4.js";const d={},r=n("h2",{id:"虚拟节点介绍",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#虚拟节点介绍"},[n("span",null,"虚拟节点介绍")])],-1),u=n("p",null,[n("em",null,"虚拟节点（vnode:Virtual Node）")],-1),k=n("p",null,[s("在 Vue 3 中，虚拟节点 (vnode) 是一个 "),n("span",{class:"text-brand-500 font-bold"},"JavaScript 对象"),s("，表示渲染树中的一个节点。虚拟节点用于描述界面的结构，最终由 Vue 渲染成真实的 DOM 元素。")],-1),v=n("span",{class:"text-brand-500 font-bold"}," 虚拟节点（VNode）是对真实 DOM 节点的抽象表示，用于高效地更新和渲染视图。 包含了组件树的状态和结构信息，而不是实际的 DOM 元素。 ",-1),m=n("p",null,[s("一个 "),n("code",null,"vnode"),s(" 对象通常包含以下信息：")],-1),h=o('<li><code>type</code>: 节点的类型，可以是 HTML 标签名、组件对象或异步组件。</li><li><code>props</code>: 节点的属性和属性值。</li><li><code>children</code>: 子节点列表。</li><li><code>key</code>: 节点的唯一标识，用于优化更新。</li><li><code>el</code>: <span class="text-brand-500">对应的真实 DOM 节点，在挂载时会赋值。</span></li>',5),b=o(`<p>举个例子，使用 <code>createVNode</code> 创建一个简单的虚拟节点：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> createVNode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> vnode <span class="token operator">=</span> <span class="token function">createVNode</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token keyword">class</span><span class="token operator">:</span> <span class="token string">&#39;my-div&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;Hello, world!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出的 <code>vnode</code> 对象可能类似于：</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre class="language-json"><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-div&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Hello, world!&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;el&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// ...其他内部属性</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function _(g,y){const a=c("RouteLink");return i(),l("div",null,[r,u,k,v,m,n("ul",null,[h,n("li",null,[e(a,{to:"/vue3/vnode.component.html"},{default:t(()=>[s("component")]),_:1}),s(": 当虚拟节点表示一个自定义组件时，该属性将指向该组件实例对象。")]),n("li",null,[e(a,{to:"/vue3/vnode.component.proxy.html"},{default:t(()=>[s("component.proxy")]),_:1}),s(": 当虚拟节点表示一个自定义组件时，该属性将指向该组件的代理对象。")])]),b])}const f=p(d,[["render",_],["__file","vnode.html.vue"]]),x=JSON.parse('{"path":"/vue3/vnode.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"虚拟节点介绍","slug":"虚拟节点介绍","link":"#虚拟节点介绍","children":[]}],"git":{"updatedTime":1719327802000,"contributors":[{"name":"BaronYan","email":"1229598328@qq.com","commits":1}]},"filePathRelative":"vue3/vnode.md","excerpt":"<h2>虚拟节点介绍</h2>\\n<p><em>虚拟节点（vnode:Virtual Node）</em></p>\\n<p>在 Vue 3 中，虚拟节点 (vnode) 是一个\\n<span class=\\"text-brand-500 font-bold\\">JavaScript 对象</span>，表示渲染树中的一个节点。虚拟节点用于描述界面的结构，最终由 Vue 渲染成真实的 DOM 元素。</p>\\n<span class=\\"text-brand-500 font-bold\\">\\n虚拟节点（VNode）是对真实 DOM 节点的抽象表示，用于高效地更新和渲染视图。 包含了组件树的状态和结构信息，而不是实际的 DOM 元素。\\n</span>"}');export{f as comp,x as data};
