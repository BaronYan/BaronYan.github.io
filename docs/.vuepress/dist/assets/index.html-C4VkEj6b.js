import{_ as s,c as n,o as a,d as e}from"./app-MR65cc9Q.js";const l={},p=e(`<h2 id="项目初始化" tabindex="-1"><a class="header-anchor" href="#项目初始化"><span>项目初始化</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"></span>
<span class="line"><span class="token comment"># 创建项目</span></span>
<span class="line"><span class="token function">composer</span> create-project laravel/laravel thbGlobalLogistics --prefer-dist</span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">cd</span> thbGlobalLogistics</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 安装多语言</span></span>
<span class="line">php artisan lang:publish</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 安装 debugbar</span></span>
<span class="line"><span class="token function">composer</span> require barryvdh/laravel-debugbar <span class="token parameter variable">--dev</span></span>
<span class="line">php artisan vendor:publish</span>
<span class="line"><span class="token comment"># 修改 config/debugbar.php</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 修改 .gitignore   [ignore  / ɪɡˈnɔː(r) / 忽视]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 修改 config/app.php</span></span>
<span class="line"><span class="token comment">#       timezone=&#39;UTC&#39; =》timezone=&#39;Asia/Shanghai&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 该软件包可生成辅助文件，使您的集成开发环境能提供准确的自动完成功能。 </span></span>
<span class="line"><span class="token comment"># 生成过程基于项目中的文件，因此它们始终是最新的。</span></span>
<span class="line"><span class="token function">composer</span> require <span class="token parameter variable">--dev</span> barryvdh/laravel-ide-helper</span>
<span class="line">php artisan ide-helper:generate</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 每次新增 model 的时候执行一次</span></span>
<span class="line">php artisan ide-helper:models</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 加入 git 版本管理</span></span>
<span class="line"><span class="token function">git</span> init</span>
<span class="line"><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span></span>
<span class="line"><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;项目初始化&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token function">composer</span> require opcodesio/log-viewer</span>
<span class="line">php artisan log-viewer:publish</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 安装 breeze</span></span>
<span class="line"><span class="token function">composer</span> require laravel/breeze <span class="token parameter variable">--dev</span></span>
<span class="line"><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span></span>
<span class="line"><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;安装breeze&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 如果下面操作失败，则设置 npm 源</span></span>
<span class="line"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npmmirror.com</span>
<span class="line"></span>
<span class="line">php artisan breeze:install</span>
<span class="line"><span class="token comment">#  ┌ Which Breeze stack would you like to install? ───────────────┐</span></span>
<span class="line"><span class="token comment">#  │   ○ Blade with Alpine                                        │</span></span>
<span class="line"><span class="token comment">#  │   ○ Livewire (Volt Class API) with Alpine                    │</span></span>
<span class="line"><span class="token comment">#  │   ○ Livewire (Volt Functional API) with Alpine               │</span></span>
<span class="line"><span class="token comment">#  │   ○ React with Inertia                                       │</span></span>
<span class="line"><span class="token comment">#  │ › ● Vue with Inertia                                         │</span></span>
<span class="line"><span class="token comment">#  │   ○ API only                                                 │</span></span>
<span class="line"><span class="token comment">#  └──────────────────────────────────────────────────────────────┘</span></span>
<span class="line"><span class="token comment">#  ┌ Would you like any optional features? ───────────────────────┐</span></span>
<span class="line"><span class="token comment">#  │ › ◻ Dark mode                                                │</span></span>
<span class="line"><span class="token comment">#  │   ◻ Inertia SSR                                              │</span></span>
<span class="line"><span class="token comment">#  │   ◻ TypeScript                                               │</span></span>
<span class="line"><span class="token comment">#  └──────────────────────────────────────────────────────────────┘</span></span>
<span class="line"><span class="token comment">#  ┌ Which testing framework do you prefer? ──────────────────────┐</span></span>
<span class="line"><span class="token comment">#  │   ○ Pest                                                     │</span></span>
<span class="line"><span class="token comment">#  │ › ● PHPUnit                                                  │</span></span>
<span class="line"><span class="token comment">#  └──────────────────────────────────────────────────────────────┘</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 切换 npm 为  yarn</span></span>
<span class="line"><span class="token function">rm</span> <span class="token parameter variable">-rf</span> node_modules</span>
<span class="line"><span class="token function">rm</span> <span class="token parameter variable">-rf</span> package-lock.json</span>
<span class="line"><span class="token function">yarn</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装-laravel-reverb" tabindex="-1"><a class="header-anchor" href="#安装-laravel-reverb"><span>安装 Laravel Reverb</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">php artisan install:broadcasting</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="设置-reverb" tabindex="-1"><a class="header-anchor" href="#设置-reverb"><span>设置 reverb</span></a></h3><p>系统会自动生成以下秘钥</p><div class="language-env line-numbers-mode" data-highlighter="prismjs" data-ext="env" data-title="env"><pre class="language-env"><code><span class="line">REVERB_APP_ID=310930</span>
<span class="line">REVERB_APP_KEY=zvcqfn7k1gmb157ppvau</span>
<span class="line">REVERB_APP_SECRET=mjuf9qczdzteyk3pqf4h</span>
<span class="line">REVERB_HOST=&quot;localhost&quot;</span>
<span class="line">REVERB_PORT=8080</span>
<span class="line">REVERB_SCHEME=http</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动环境</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">php artisan serve</span>
<span class="line"><span class="token function">yarn</span> dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实战练习" tabindex="-1"><a class="header-anchor" href="#实战练习"><span>实战练习</span></a></h3><ol><li>创建一个订单</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">php artisan make:model Order <span class="token parameter variable">-m</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token comment">// Migrations</span></span>
<span class="line"><span class="token class-name static-context">Schema</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;orders&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Blueprint</span> <span class="token variable">$table</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token keyword type-declaration">string</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;status&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token keyword type-declaration">string</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;order_no&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">timestamps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment">// DatabaseSeeder</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name static-context">Order</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;status&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;pending&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;order_no&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;test&#39;</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">php artisan migrate:refresh <span class="token parameter variable">--seed</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>创建一个事件</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">php artisan make:event OrderShipmentStatusUpdated</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>修改事件让其实现 <code>ShouldBroadcast</code> 接口</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Events</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Order</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Broadcasting<span class="token punctuation">\\</span>Channel</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Broadcasting<span class="token punctuation">\\</span>InteractsWithSockets</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Broadcasting<span class="token punctuation">\\</span>PresenceChannel</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Broadcasting<span class="token punctuation">\\</span>PrivateChannel</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>Broadcasting<span class="token punctuation">\\</span>ShouldBroadcast</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Foundation<span class="token punctuation">\\</span>Events<span class="token punctuation">\\</span>Dispatchable</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Queue<span class="token punctuation">\\</span>SerializesModels</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 订单发货状态更新事件,实现 ShouldBroadcast 接口</span>
<span class="line"> * 接收订单和状态</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name-definition class-name">OrderShipmentStatusUpdated</span> <span class="token keyword">implements</span> <span class="token class-name">ShouldBroadcast</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">use</span> <span class="token package">Dispatchable</span><span class="token punctuation">,</span> InteractsWithSockets<span class="token punctuation">,</span> SerializesModels<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * Create a new event instance.</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span></span>
<span class="line">        <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name type-declaration">Order</span> <span class="token variable">$order</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token keyword">public</span> <span class="token operator">?</span><span class="token keyword type-hint">string</span>         <span class="token variable">$status</span> <span class="token operator">=</span> <span class="token constant">null</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">status</span> <span class="token operator">=</span> <span class="token variable">$status</span> <span class="token operator">??</span> <span class="token variable">$order</span><span class="token operator">-&gt;</span><span class="token property">status</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * Get the channels the event should broadcast on.</span>
<span class="line">     * 使用【自定义通道】来广播此事件：order.<span class="token punctuation">{</span>id<span class="token punctuation">}</span></span>
<span class="line">     * </span>
<span class="line">     * <span class="token keyword">@return</span> <span class="token class-name">Channel<span class="token punctuation">|</span><span class="token keyword">array</span></span></span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">broadcastOn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name">Channel</span><span class="token operator">|</span><span class="token keyword type-declaration">array</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 公共频道，私有频道用 PrivateChannel,并且还要在 config/channels.php 里设置频道权限</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Channel</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;orders.&#39;</span> <span class="token operator">.</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">order</span><span class="token operator">-&gt;</span><span class="token property">id</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>触发事件</li></ol><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token function">broadcast</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OrderShipmentStatusUpdated</span><span class="token punctuation">(</span><span class="token variable">$order</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 或者</span></span>
<span class="line"><span class="token class-name static-context">OrderShipmentStatusUpdated</span><span class="token operator">::</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token variable">$order</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>监听事件</li></ol><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">Echo<span class="token punctuation">.</span><span class="token function">channel</span><span class="token punctuation">(</span><span class="token string">&#39;orders.1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token string">&#39;OrderShipmentStatusUpdated&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    status<span class="token punctuation">.</span>value <span class="token operator">=</span> e<span class="token punctuation">.</span>status<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>启动 reverb 服务器</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">php artisan reverb:start</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>https://www.youtube.com/watch?v=gv9z1yv0_7k</p><h2 id="安装其他前端依赖" tabindex="-1"><a class="header-anchor" href="#安装其他前端依赖"><span>安装其他前端依赖</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">yarn</span> <span class="token function">add</span> nanoid vue-i18n@9 nanoid animate.css normalize.css  tailwind-animatecss <span class="token comment"># vee-validate yup</span></span>
<span class="line"><span class="token function">yarn</span> <span class="token function">add</span> vite-plugin-svg-icons pinia pinia-plugin-persistedstate <span class="token parameter variable">-D</span> <span class="token comment"># import &#39;virtual:svg-icons-register&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,27),i=[p];function t(c,o){return a(),n("div",null,i)}const d=s(l,[["render",t],["__file","index.html.vue"]]),u=JSON.parse(`{"path":"/jiyun/","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"项目初始化","slug":"项目初始化","link":"#项目初始化","children":[]},{"level":2,"title":"安装 Laravel Reverb","slug":"安装-laravel-reverb","link":"#安装-laravel-reverb","children":[{"level":3,"title":"设置 reverb","slug":"设置-reverb","link":"#设置-reverb","children":[]},{"level":3,"title":"实战练习","slug":"实战练习","link":"#实战练习","children":[]}]},{"level":2,"title":"安装其他前端依赖","slug":"安装其他前端依赖","link":"#安装其他前端依赖","children":[]}],"git":{"updatedTime":1725369889000,"contributors":[{"name":"BaronYan","email":"1229598328@qq.com","commits":6}]},"filePathRelative":"jiyun/index.md","excerpt":"<h2>项目初始化</h2>\\n<div class=\\"language-bash\\" data-highlighter=\\"prismjs\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\"># 创建项目</span></span>\\n<span class=\\"line\\"><span class=\\"token function\\">composer</span> create-project laravel/laravel thbGlobalLogistics --prefer-dist</span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token builtin class-name\\">cd</span> thbGlobalLogistics</span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\"># 安装多语言</span></span>\\n<span class=\\"line\\">php artisan lang:publish</span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\"># 安装 debugbar</span></span>\\n<span class=\\"line\\"><span class=\\"token function\\">composer</span> require barryvdh/laravel-debugbar <span class=\\"token parameter variable\\">--dev</span></span>\\n<span class=\\"line\\">php artisan vendor:publish</span>\\n<span class=\\"line\\"><span class=\\"token comment\\"># 修改 config/debugbar.php</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\"># 修改 .gitignore   [ignore  / ɪɡˈnɔː(r) / 忽视]</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\"># 修改 config/app.php</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">#       timezone='UTC' =》timezone='Asia/Shanghai'</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\"># 该软件包可生成辅助文件，使您的集成开发环境能提供准确的自动完成功能。 </span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\"># 生成过程基于项目中的文件，因此它们始终是最新的。</span></span>\\n<span class=\\"line\\"><span class=\\"token function\\">composer</span> require <span class=\\"token parameter variable\\">--dev</span> barryvdh/laravel-ide-helper</span>\\n<span class=\\"line\\">php artisan ide-helper:generate</span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\"># 每次新增 model 的时候执行一次</span></span>\\n<span class=\\"line\\">php artisan ide-helper:models</span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\"># 加入 git 版本管理</span></span>\\n<span class=\\"line\\"><span class=\\"token function\\">git</span> init</span>\\n<span class=\\"line\\"><span class=\\"token function\\">git</span> <span class=\\"token function\\">add</span> <span class=\\"token builtin class-name\\">.</span></span>\\n<span class=\\"line\\"><span class=\\"token function\\">git</span> commit <span class=\\"token parameter variable\\">-m</span> <span class=\\"token string\\">\\"项目初始化\\"</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token function\\">composer</span> require opcodesio/log-viewer</span>\\n<span class=\\"line\\">php artisan log-viewer:publish</span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\"># 安装 breeze</span></span>\\n<span class=\\"line\\"><span class=\\"token function\\">composer</span> require laravel/breeze <span class=\\"token parameter variable\\">--dev</span></span>\\n<span class=\\"line\\"><span class=\\"token function\\">git</span> <span class=\\"token function\\">add</span> <span class=\\"token builtin class-name\\">.</span></span>\\n<span class=\\"line\\"><span class=\\"token function\\">git</span> commit <span class=\\"token parameter variable\\">-m</span> <span class=\\"token string\\">\\"安装breeze\\"</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\"># 如果下面操作失败，则设置 npm 源</span></span>\\n<span class=\\"line\\"><span class=\\"token function\\">npm</span> config <span class=\\"token builtin class-name\\">set</span> registry https://registry.npmmirror.com</span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\">php artisan breeze:install</span>\\n<span class=\\"line\\"><span class=\\"token comment\\">#  ┌ Which Breeze stack would you like to install? ───────────────┐</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">#  │   ○ Blade with Alpine                                        │</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">#  │   ○ Livewire (Volt Class API) with Alpine                    │</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">#  │   ○ Livewire (Volt Functional API) with Alpine               │</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">#  │   ○ React with Inertia                                       │</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">#  │ › ● Vue with Inertia                                         │</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">#  │   ○ API only                                                 │</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">#  └──────────────────────────────────────────────────────────────┘</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">#  ┌ Would you like any optional features? ───────────────────────┐</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">#  │ › ◻ Dark mode                                                │</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">#  │   ◻ Inertia SSR                                              │</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">#  │   ◻ TypeScript                                               │</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">#  └──────────────────────────────────────────────────────────────┘</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">#  ┌ Which testing framework do you prefer? ──────────────────────┐</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">#  │   ○ Pest                                                     │</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">#  │ › ● PHPUnit                                                  │</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">#  └──────────────────────────────────────────────────────────────┘</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\"># 切换 npm 为  yarn</span></span>\\n<span class=\\"line\\"><span class=\\"token function\\">rm</span> <span class=\\"token parameter variable\\">-rf</span> node_modules</span>\\n<span class=\\"line\\"><span class=\\"token function\\">rm</span> <span class=\\"token parameter variable\\">-rf</span> package-lock.json</span>\\n<span class=\\"line\\"><span class=\\"token function\\">yarn</span></span>\\n<span class=\\"line\\"></span></code></pre></div>"}`);export{d as comp,u as data};
