import{_ as e,c,o,d as i}from"./app-1er_rJpx.js";const l={},t=i("<p>CSS 的 <code>white-space</code> 属性用于控制元素内如何处理空白字符和换行。</p><p>该属性有以下几种常用的值：</p><ol><li><code>normal</code>：默认值。连续的空白字符会被合并，文本会换行。</li><li><code>nowrap</code>：文本不会换行，所有的文本会在一行显示，除非使用 <code>&lt;br&gt;</code> 标签手动换行。</li><li><code>pre</code>：文本会保留空白字符和换行符，就像在 <code>&lt;pre&gt;</code> 标签中一样。</li><li><code>pre-wrap</code>：保留空白字符和换行符，同时允许长的文本在必要时换行。</li><li><code>pre-line</code>：合并连续的空白字符，但保留换行符。</li></ol><p><strong>用法总结</strong></p><ul><li><code>white-space: normal;</code> 用于常规文本显示。</li><li><code>white-space: nowrap;</code> 用于不希望文本换行的场景。</li><li><code>white-space: pre;</code> 用于显示格式化文本，保留空白字符和换行符。</li><li><code>white-space: pre-wrap;</code> 用于需要保留空白字符和换行符，但也允许文本在必要时换行。</li><li><code>white-space: pre-line;</code> 用于合并空白字符但保留换行符的场景。</li></ul><p>这个属性在处理文本格式时非常有用，特别是当你希望保留文本中的空白字符和换行符时。</p>",6),d=[t];function p(a,r){return o(),c("div",null,d)}const s=e(l,[["render",p],["__file","white-space.html.vue"]]),h=JSON.parse('{"path":"/css/white-space.html","title":"","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":1721056834000,"contributors":[{"name":"BaronYan","email":"1229598328@qq.com","commits":1}]},"filePathRelative":"css/white-space.md","excerpt":"<p>CSS 的 <code>white-space</code> 属性用于控制元素内如何处理空白字符和换行。</p>\\n<p>该属性有以下几种常用的值：</p>\\n<ol>\\n<li><code>normal</code>：默认值。连续的空白字符会被合并，文本会换行。</li>\\n<li><code>nowrap</code>：文本不会换行，所有的文本会在一行显示，除非使用 <code>&lt;br&gt;</code> 标签手动换行。</li>\\n<li><code>pre</code>：文本会保留空白字符和换行符，就像在 <code>&lt;pre&gt;</code> 标签中一样。</li>\\n<li><code>pre-wrap</code>：保留空白字符和换行符，同时允许长的文本在必要时换行。</li>\\n<li><code>pre-line</code>：合并连续的空白字符，但保留换行符。</li>\\n</ol>"}');export{s as comp,h as data};
