import{_ as n,c as s,o as a,d as p}from"./app-DVIEC1ug.js";const e={},t=p(`<p>appContext有什么用？</p><p>appContext 在 Vue 3 中是一个非常重要的概念。它代表了应用程序的上下文，包含了许多全局配置和资源。</p><p>以下是 appContext 的主要用途：</p><ol><li>全局组件注册： <ul><li><code>appContext</code> 包含了在应用程序级别注册的所有全局组件。</li></ul></li><li>全局指令： <ul><li>它也包含了所有全局注册的自定义指令。</li></ul></li><li>全局混入（Mixins）： <ul><li>应用级别的混入也存储在 <code>appContext</code> 中。</li></ul></li><li>插件： <ul><li>通过 <code>app.use()</code> 安装的插件会修改 <code>appContext</code>。</li></ul></li><li>全局属性： <ul><li>使用 <code>app.config.globalProperties</code> 定义的全局属性也是 <code>appContext</code> 的一部分。</li></ul></li><li>全局配置： <ul><li>如错误处理器、性能追踪设置等全局配置也存储在这里。</li></ul></li><li>提供/注入系统： <ul><li><code>provide</code> 和 <code>inject</code> API 使用的数据也存储在 <code>appContext</code> 中。</li></ul></li></ol><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">vnode<span class="token punctuation">.</span>appContext <span class="token operator">=</span> appContext<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这行代码的作用是将传入的 appContext 赋值给新创建的虚拟节点（vnode）。这样做的目的是确保新创建的组件实例能够访问到正确的应用程序上下文。</p><p>这在动态创建组件时特别有用，比如在您的消息框组件中。通过设置正确的 <code>appContext</code>，您确保了：</p><ul><li>动态创建的组件可以使用全局注册的组件、指令和插件。</li><li>可以正确地解析 <code>provide/inject</code> 关系。</li><li>全局配置（如错误处理）可以正确应用到新创建的组件。</li></ul><p>总之，设置 <code>appContext</code> 确保了动态创建的组件能够与主应用程序保持一致的上下文环境，使其行为与直接在模板中使用的组件一致。</p><p>appContext 的使用主要在以下几个方面：</p><ol><li>获取 appContext： <ul><li>通常，你可以从根组件或者 app 实例中获取 appContext：</li></ul></li></ol><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> appContext <span class="token operator">=</span> app<span class="token punctuation">.</span>_context<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 或者在组件内部</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> appContext <span class="token operator">=</span> <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>appContext<span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>传递 <code>appContext</code>： <ul><li>在动态创建组件时，你可以传递 appContext：</li></ul></li></ol><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> vnode <span class="token operator">=</span> <span class="token function">createVNode</span><span class="token punctuation">(</span>MyComponent<span class="token punctuation">,</span> props<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">vnode<span class="token punctuation">.</span>appContext <span class="token operator">=</span> appContext<span class="token punctuation">;</span></span>
<span class="line"><span class="token function">render</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> container<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>使用 appContext 中的全局资源</li></ol><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token comment">// 在组件内部</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span> globalProperties <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>appContext<span class="token punctuation">.</span>config<span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 使用全局属性</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>globalProperties<span class="token punctuation">.</span><span class="token function">$someGlobalMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>注册全局组件</li></ol><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;GlobalComponent&#39;</span><span class="token punctuation">,</span> GlobalComponent<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>提供全局数据</li></ol><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">provide</span><span class="token punctuation">(</span><span class="token string">&#39;globalData&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 在任何组件中使用</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> globalData <span class="token operator">=</span> <span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">&#39;globalData&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li>配置全局选项</li></ol><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">app<span class="token punctuation">.</span>config<span class="token punctuation">.</span><span class="token function-variable function">errorHandler</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 处理错误</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在你的代码中，<code>appContext</code> 主要用于确保动态创建的消息框组件能够访问到与主应用相同的全局资源和配置。这对于保持一致性和功能完整性非常重要，特别是当你的应用使用了全局组件、指令或者提供了全局数据时。</p><p>例如，如果你的消息框组件内部使用了某个全局注册的组件或指令，或者需要访问通过 provide 提供的全局数据，正确设置 <code>appContext</code> 就变得至关重要。</p>`,24),l=[t];function o(c,i){return a(),s("div",null,l)}const d=n(e,[["render",o],["__file","vnode_appContent.html.vue"]]),r=JSON.parse('{"path":"/vue3/vnode_appContent.html","title":"","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":1726386718000,"contributors":[{"name":"BaronYan","email":"1229598328@qq.com","commits":2}]},"filePathRelative":"vue3/vnode_appContent.md","excerpt":"<p>appContext有什么用？</p>\\n<p>appContext 在 Vue 3 中是一个非常重要的概念。它代表了应用程序的上下文，包含了许多全局配置和资源。</p>\\n<p>以下是 appContext 的主要用途：</p>\\n<ol>\\n<li>全局组件注册：\\n<ul>\\n<li><code>appContext</code> 包含了在应用程序级别注册的所有全局组件。</li>\\n</ul>\\n</li>\\n<li>全局指令：\\n<ul>\\n<li>它也包含了所有全局注册的自定义指令。</li>\\n</ul>\\n</li>\\n<li>全局混入（Mixins）：\\n<ul>\\n<li>应用级别的混入也存储在 <code>appContext</code> 中。</li>\\n</ul>\\n</li>\\n<li>插件：\\n<ul>\\n<li>通过 <code>app.use()</code> 安装的插件会修改 <code>appContext</code>。</li>\\n</ul>\\n</li>\\n<li>全局属性：\\n<ul>\\n<li>使用 <code>app.config.globalProperties</code> 定义的全局属性也是 <code>appContext</code> 的一部分。</li>\\n</ul>\\n</li>\\n<li>全局配置：\\n<ul>\\n<li>如错误处理器、性能追踪设置等全局配置也存储在这里。</li>\\n</ul>\\n</li>\\n<li>提供/注入系统：\\n<ul>\\n<li><code>provide</code> 和 <code>inject</code> API 使用的数据也存储在 <code>appContext</code> 中。</li>\\n</ul>\\n</li>\\n</ol>"}');export{d as comp,r as data};
