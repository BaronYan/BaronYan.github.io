import comp from "/home/yanbeirong/www/baronblogs/docs/.vuepress/.temp/pages/laravel/fail.html.vue"
const data = JSON.parse("{\"path\":\"/laravel/fail.html\",\"title\":\"$fail 函数\",\"lang\":\"en-US\",\"frontmatter\":{},\"headers\":[],\"git\":{\"updatedTime\":1727004899000,\"contributors\":[{\"name\":\"BaronYan\",\"email\":\"1229598328@qq.com\",\"commits\":1}]},\"filePathRelative\":\"laravel/fail.md\",\"excerpt\":\"\\n<p><code>$fail</code> 函数是 Laravel 验证系统中自定义验证规则时使用的一个重要工具。</p>\\n<p>它主要用在闭包验证规则或自定义验证规则中，用于标记验证失败并提供错误消息。</p>\\n<p>以下是关于 <code>$fail</code> 函数的一些重要信息：</p>\\n<ul>\\n<li><code>$fail</code> 函数用于指示当前验证规则失败。当调用 <code>$fail</code> 函数时，Laravel 会将该字段标记为验证失败，并添加相应的错误消息。</li>\\n<li><code>$fail</code> 函数通常作为闭包验证规则的参数之一。您可以调用它并传入一个字符串参数，这个字符串将作为错误消息。</li>\\n<li>您可以根据需要多次调用 <code>$fail</code> 函数，每次调用都会添加一个新的错误消息。</li>\\n<li><code>$fail</code> 函数可以与 Laravel 的本地化功能结合使用，允许您传入翻译后的错误消息。</li>\\n<li>使用 <code>$fail</code> 函数，您可以实现复杂的条件验证逻辑，这在标准验证规则难以表达时特别有用。</li>\\n<li>在闭包中，您可以访问请求的其他数据，这使得基于多个字段或复杂逻辑的验证成为可能。</li>\\n</ul>\"}")
export { comp, data }
