import comp from "/home/yanbeirong/www/myblog/docs/.vuepress/.temp/pages/laravel/trait引导机制.html.vue"
const data = JSON.parse("{\"path\":\"/laravel/trait%E5%BC%95%E5%AF%BC%E6%9C%BA%E5%88%B6.html\",\"title\":\"Laravel 的 trait 引导机制\",\"lang\":\"en-US\",\"frontmatter\":{},\"headers\":[{\"level\":2,\"title\":\"Laravel 的模型事件系统\",\"slug\":\"laravel-的模型事件系统\",\"link\":\"#laravel-的模型事件系统\",\"children\":[]}],\"git\":{\"updatedTime\":1726933670000,\"contributors\":[{\"name\":\"BaronYan\",\"email\":\"1229598328@qq.com\",\"commits\":1}]},\"filePathRelative\":\"laravel/trait引导机制.md\",\"excerpt\":\"\\n<div class=\\\"language-php\\\" data-highlighter=\\\"prismjs\\\" data-ext=\\\"php\\\" data-title=\\\"php\\\"><pre class=\\\"language-php\\\"><code><span class=\\\"line\\\"><span class=\\\"token keyword\\\">trait</span> <span class=\\\"token class-name-definition class-name\\\">HasCompanySort</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token punctuation\\\">{</span></span>\\n<span class=\\\"line\\\">    <span class=\\\"token doc-comment comment\\\">/**</span>\\n<span class=\\\"line\\\">     * 启动 trait</span>\\n<span class=\\\"line\\\">     * 这个方法会在模型被创建时自动调用</span>\\n<span class=\\\"line\\\">     */</span></span>\\n<span class=\\\"line\\\">    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">static</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function-definition function\\\">bootHasCompanySort</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword return-type\\\">void</span></span>\\n<span class=\\\"line\\\">    <span class=\\\"token punctuation\\\">{</span></span>\\n<span class=\\\"line\\\">        <span class=\\\"token keyword static-context\\\">static</span><span class=\\\"token operator\\\">::</span><span class=\\\"token function\\\">creating</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$model</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span></span>\\n<span class=\\\"line\\\">            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span><span class=\\\"token variable\\\">$model</span><span class=\\\"token operator\\\">-&gt;</span><span class=\\\"token property\\\">sort</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span></span>\\n<span class=\\\"line\\\">                <span class=\\\"token comment\\\">// 如果没有设置 sort 值，则设置为当前公司最大的 sort 值 + 1</span></span>\\n<span class=\\\"line\\\">                <span class=\\\"token variable\\\">$model</span><span class=\\\"token operator\\\">-&gt;</span><span class=\\\"token property\\\">sort</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword static-context\\\">static</span><span class=\\\"token operator\\\">::</span><span class=\\\"token function\\\">where</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string single-quoted-string\\\">'company_id'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$model</span><span class=\\\"token operator\\\">-&gt;</span><span class=\\\"token property\\\">company_id</span><span class=\\\"token punctuation\\\">)</span></span>\\n<span class=\\\"line\\\">                    <span class=\\\"token operator\\\">-&gt;</span><span class=\\\"token function\\\">max</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string single-quoted-string\\\">'sort'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"line\\\">            <span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"line\\\">        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"line\\\">    <span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"line\\\"></span></code></pre></div>\"}")
export { comp, data }
