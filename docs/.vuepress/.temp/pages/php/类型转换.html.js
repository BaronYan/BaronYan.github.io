import comp from "/home/yanbeirong/www/baronblogs/docs/.vuepress/.temp/pages/php/类型转换.html.vue"
const data = JSON.parse("{\"path\":\"/php/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2.html\",\"title\":\"\",\"lang\":\"en-US\",\"frontmatter\":{},\"headers\":[{\"level\":3,\"title\":\"强制类型转换（Casting）\",\"slug\":\"强制类型转换-casting\",\"link\":\"#强制类型转换-casting\",\"children\":[]},{\"level\":3,\"title\":\"类型函数\",\"slug\":\"类型函数\",\"link\":\"#类型函数\",\"children\":[]},{\"level\":3,\"title\":\"自动类型转换\",\"slug\":\"自动类型转换\",\"link\":\"#自动类型转换\",\"children\":[]},{\"level\":3,\"title\":\"gettype() 函数\",\"slug\":\"gettype-函数\",\"link\":\"#gettype-函数\",\"children\":[]},{\"level\":3,\"title\":\"其他相关函数\",\"slug\":\"其他相关函数\",\"link\":\"#其他相关函数\",\"children\":[]},{\"level\":3,\"title\":\"在 laravel 中\",\"slug\":\"在-laravel-中\",\"link\":\"#在-laravel-中\",\"children\":[]},{\"level\":3,\"title\":\"原始类型转换\",\"slug\":\"原始类型转换\",\"link\":\"#原始类型转换\",\"children\":[]}],\"git\":{\"updatedTime\":1720538994000,\"contributors\":[{\"name\":\"BaronYan\",\"email\":\"1229598328@qq.com\",\"commits\":1}]},\"filePathRelative\":\"php/类型转换.md\",\"excerpt\":\"<p>PHP 支持多种类型转换操作符，用于在不同数据类型之间进行转换。以下是 PHP 中常用的类型转换操作符和方法：</p>\\n<h3>强制类型转换（Casting）</h3>\\n<p>强制类型转换使用类型名称作为前缀，将值转换为指定类型。支持的类型包括 <code>(int)</code>, <code>(bool)</code>, <code>(float)</code>, <code>(string)</code>, <code>(array)</code>, <code>(object)</code>, <code>(unset)</code>。</p>\\n<div class=\\\"language-php\\\" data-highlighter=\\\"prismjs\\\" data-ext=\\\"php\\\" data-title=\\\"php\\\"><pre class=\\\"language-php\\\"><code><span class=\\\"line\\\"><span class=\\\"token variable\\\">$value</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string double-quoted-string\\\">\\\"123\\\"</span><span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span class=\\\"token comment\\\">// 转换为整数</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token variable\\\">$int_value</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword type-casting\\\">int</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token variable\\\">$value</span><span class=\\\"token punctuation\\\">;</span> </span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span class=\\\"token comment\\\">// 转换为布尔值</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token variable\\\">$bool_value</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword type-casting\\\">bool</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token variable\\\">$value</span><span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span class=\\\"token comment\\\">// 转换为浮点数</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token variable\\\">$float_value</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword type-casting\\\">float</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token variable\\\">$value</span><span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span class=\\\"token comment\\\">// 转换为字符串</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token variable\\\">$string_value</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword type-casting\\\">string</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token variable\\\">$value</span><span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span class=\\\"token comment\\\">// 转换为数组</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token variable\\\">$array_value</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword type-casting\\\">array</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token variable\\\">$value</span><span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span class=\\\"token comment\\\">// 转换为对象</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token variable\\\">$object_value</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword type-casting\\\">object</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token variable\\\">$value</span><span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span class=\\\"token comment\\\">// 转换为 NULL</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token variable\\\">$unset_value</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">unset</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token variable\\\">$value</span><span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"></span></code></pre></div>\"}")
export { comp, data }
