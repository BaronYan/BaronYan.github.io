import comp from "/home/yanbeirong/www/myblog/docs/.vuepress/.temp/pages/vue3/防止ref不会自动解包.html.vue"
const data = JSON.parse("{\"path\":\"/vue3/%E9%98%B2%E6%AD%A2ref%E4%B8%8D%E4%BC%9A%E8%87%AA%E5%8A%A8%E8%A7%A3%E5%8C%85.html\",\"title\":\"\",\"lang\":\"en-US\",\"frontmatter\":{},\"headers\":[],\"git\":{\"updatedTime\":1728478107000,\"contributors\":[{\"name\":\"BaronYan\",\"email\":\"1229598328@qq.com\",\"commits\":1}]},\"filePathRelative\":\"vue3/防止ref不会自动解包.md\",\"excerpt\":\"<p>如何防止组合式函数内部的计算属性等值在template 中使用时不会自动解包</p>\\n<p>确保组合式函数内部的计算属性等值在模板中使用时能够自动解包。这确实是 Vue 3 的默认行为，但有时可能会出现意外情况。让我为您解释一下如何确保自动解包正常工作：</p>\\n<p>确保正确返回响应式值：</p>\\n<ul>\\n<li><strong>组合式函数应该直接返回 ref 或 computed 值，而不是将它们包装在普通对象中</strong>。</li>\\n<li>确保在组件中直接使用组合式函数返回的值，不要再次包装它们。</li>\\n<li>如果您使用 toRef 来解构 ref 对象，确保在模板中直接使用解构后的属性。</li>\\n<li>如果您使用 toRefs 来解构 reactive 对象，确保在模板中直接使用解构后的属性。</li>\\n</ul>\"}")
export { comp, data }
