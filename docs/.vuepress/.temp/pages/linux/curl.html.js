import comp from "/home/yanbeirong/www/myblog/docs/.vuepress/.temp/pages/linux/curl.html.vue"
const data = JSON.parse("{\"path\":\"/linux/curl.html\",\"title\":\"快速认识 curl\",\"lang\":\"en-US\",\"frontmatter\":{},\"headers\":[],\"git\":{\"updatedTime\":1724859467000,\"contributors\":[{\"name\":\"BaronYan\",\"email\":\"1229598328@qq.com\",\"commits\":2}]},\"filePathRelative\":\"linux/curl.md\",\"excerpt\":\"\\n<p>curl 是常用的命令行工具，用来请求 Web 服务器。它的名字就是客户端（client）的 URL 工具的意思。</p>\\n<p>它的功能非常强大，命令行参数多达几十种。如果熟练的话，完全可以取代 Postman 这一类的图形界面工具。</p>\\n<p>https://www.ruanyifeng.com/blog/2019/09/curl-reference.html</p>\\n<div class=\\\"language-bash\\\" data-highlighter=\\\"prismjs\\\" data-ext=\\\"sh\\\" data-title=\\\"sh\\\"><pre class=\\\"language-bash\\\"><code><span class=\\\"line\\\"><span class=\\\"token comment\\\"># 不带有任何参数时，curl 就是发出 GET 请求。</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token function\\\">curl</span> https://www.example.com</span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span class=\\\"token comment\\\"># -b参数用来向服务器发送 Cookie。</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token function\\\">curl</span> <span class=\\\"token parameter variable\\\">-b</span> <span class=\\\"token string\\\">'foo=bar'</span> https://google.com</span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span class=\\\"token comment\\\"># -d参数用于发送 POST 请求的数据体。</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token function\\\">curl</span> -d<span class=\\\"token string\\\">'login=emma＆password=123'</span>-X POST https://google.com/login</span>\\n<span class=\\\"line\\\"><span class=\\\"token comment\\\"># 使用-d参数以后，HTTP 请求会自动加上标头Content-Type : application/x-www-form-urlencoded。并且会自动将请求转为 POST 方法，因此可以省略-X POST。</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span class=\\\"token comment\\\"># -e参数用来设置 HTTP 的标头Referer，表示请求的来源。</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token function\\\">curl</span> <span class=\\\"token parameter variable\\\">-e</span> <span class=\\\"token string\\\">'https://google.com?q=example'</span> https://www.example.com</span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span class=\\\"token comment\\\"># -H参数可以通过直接添加标头Referer，达到同样效果。</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token function\\\">curl</span> <span class=\\\"token parameter variable\\\">-H</span> <span class=\\\"token string\\\">'Referer: https://google.com?q=example'</span> https://www.example.com</span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span class=\\\"token comment\\\"># -i参数打印出服务器回应的 HTTP 标头。</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token function\\\">curl</span> <span class=\\\"token parameter variable\\\">-i</span> https://www.example.com</span>\\n<span class=\\\"line\\\"><span class=\\\"token comment\\\"># 上面命令收到服务器回应后，先输出服务器回应的标头，然后空一行，再输出网页的源码。</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span class=\\\"token comment\\\"># -I参数向服务器发出 HEAD 请求，然会将服务器返回的 HTTP 标头打印出来。</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token function\\\">curl</span> <span class=\\\"token parameter variable\\\">-I</span> https://www.example.com</span>\\n<span class=\\\"line\\\"><span class=\\\"token comment\\\"># 上面命令输出服务器对 HEAD 请求的回应。 --head参数等同于-I。</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span class=\\\"token comment\\\"># -k参数指定跳过 SSL 检测。</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token function\\\">curl</span> <span class=\\\"token parameter variable\\\">-k</span> https://www.example.com</span>\\n<span class=\\\"line\\\"><span class=\\\"token comment\\\"># 上面命令不会检查服务器的 SSL 证书是否正确。</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span class=\\\"token comment\\\"># -L参数会让 HTTP 请求跟随服务器的重定向。curl 默认不跟随重定向。</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token function\\\">curl</span> <span class=\\\"token parameter variable\\\">-L</span> https://gitee.com/RubyMetric/chsrc/releases/download/pre/chsrc-x64-linux</span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span class=\\\"token comment\\\"># -o参数将服务器的回应保存成文件，等同于wget命令。</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token function\\\">curl</span> <span class=\\\"token parameter variable\\\">-o</span> example.html https://www.example.com</span>\\n<span class=\\\"line\\\"><span class=\\\"token comment\\\"># 上面命令将www.example.com保存成example.html。</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token function\\\">curl</span> <span class=\\\"token parameter variable\\\">-L</span> https://gitee.com/RubyMetric/chsrc/releases/download/pre/chsrc-x64-linux <span class=\\\"token parameter variable\\\">-o</span> chsrc</span>\\n<span class=\\\"line\\\"><span class=\\\"token comment\\\"># 上面命令将 chsrc-x64-linux 保存成 chsrc。</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span class=\\\"token function\\\">curl</span> <span class=\\\"token parameter variable\\\">-L</span> https://gitee.com/RubyMetric/chsrc/releases/download/pre/chsrc-x64-linux <span class=\\\"token parameter variable\\\">-o</span> chsrc<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token function\\\">chmod</span> +x ./chsrc</span>\\n<span class=\\\"line\\\"><span class=\\\"token comment\\\"># 上面命令将 chsrc-x64-linux 保存成 chsrc。然后设置 chsrc 的权限为对所有人可执行</span></span>\\n<span class=\\\"line\\\"></span></code></pre></div>\"}")
export { comp, data }
